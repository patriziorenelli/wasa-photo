tags:
  - name: "doLogin"
    description: "Logs in the user"
  - name: "setMyUserName"
    description: "Set Username of User selected by his id "
  - name: "followUser"
    description: "Follow another user"  
 
openapi: 3.0.0

info: 
  title: WasaPhoto
  description:  | 
    This API allows you to manage the
    data available in the project
  version: 0.0.1
servers:
  - url: "http://localhost:3000"
  
paths: 
  /session:
    post:
      tags: ["doLogin"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: 'Ë†.*?$'
                  minLength: 3
                  maxLength: 16
        required: true
      responses: 
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    # change here if you decide to use an integer
                    # or any other type of identifier
                    type: string
                    example: "abcdef012345"
  
  /{userId}/setMyUserName/{newUsername}:
    post:
          tags: ["setMyUserName"]
          summary: Set Username of User selected by his id 
          description: |
            If the user does not exist, error is returned.
            If the user exists, his username is changed.
          operationId: setMyUserName
          parameters: 
            - in: path
              name: userId
              required: true
              schema:
                type: string
            - in: path
              name: newUsername
              required: true
              schema:
                type: string
          responses: 
            '200':
              description: Success 
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 200
                        UserNick:
                          type: string
                          example: UserName changed
            '400':
              description: Userid not found  
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 400
                        UserNick:
                          type: string
                          example: UserName NOT changed

  /{userId1}/followUser/{userId2}:
    post:
          tags: ["followUser"]
          summary: Follow another user
          description: |
            If the user identified by userId2 does not exist, error is returned.
            If the user identified by userId2 exists, user identified by userId follow user identified by userId2 if user2 hasn't banned him.
          operationId: followUser
          parameters: 
            - in: path
              name: userId1
              required: true
              schema:
                type: string
            - in: path
              name: userId2
              required: true
              schema:
                type: string
          responses: 
            '200':
              description: Success 
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 200
                        UserNick:
                          type: string
                          example: Now follow the user Marco.
           
            '400':
              description: Userid not found  
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 400
                        UserNick:
                          type: string
                          example: Userid not found.
            '403':
              description: Userid banned  
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 403
                        UserNick:
                          type: string
                          example: Sorry, Maria banned you. You can not follow her.
            '404':
              description: Userid2 not found  
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 404
                        UserNick:
                          type: string
                          example: Userid2 not found.
            '500':
              description: Error server execution  
              content: 
                application/json:
                  schema:
                    type: array
                    items:
                      properties: 
                        UserId: 
                          type: integer
                          example: 500
                        UserNick:
                          type: string
                          example: Error server execution.